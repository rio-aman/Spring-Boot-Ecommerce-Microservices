<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="741320e4-bb3e-4b6a-bca6-6533c3224ee0" name="Changes" comment="applied the configuration for the product to run on the postgresql locally by docker and by remote (cloud neon serverless postgresql) and after it to mysql locally and to the cloud or remote in phpmyadmin using docker and all are written in the application yml file&#10;&#10;so here now the order is connected to postgresql by docker locally and product connect to mysql by docker (on remote) and at last the user is connected to the mongodb cloud as mongodb atlas">
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/.mvn/wrapper/maven-wrapper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/mvnw" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/mvnw.cmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/OrderApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/controller/CartItemController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/controller/OrderController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/dto/CartItemRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/dto/OrderItemDto.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/dto/OrderResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/model/CartItem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/model/Order.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/model/OrderItem.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/model/OrderStatus.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/repository/CartItemRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/repository/OrderRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/service/CartService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/java/com/ecommerce/order/service/OrderService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/main/resources/application.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/order/src/test/java/com/ecommerce/order/OrderApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/.mvn/wrapper/maven-wrapper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/mvnw" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/mvnw.cmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/ProductApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/controller/ProductController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/dto/ProductRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/dto/ProductResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/model/Product.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/repository/ProductRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/java/com/ecommerce/product/service/ProductService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/main/resources/application.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/product/src/test/java/com/ecommerce/product/ProductApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/.mvn/wrapper/maven-wrapper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/mvnw" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/mvnw.cmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/pom.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/UserApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/controller/UserController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/dto/AddressDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/dto/UserRequest.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/dto/UserResponse.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/model/Address.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/model/User.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/model/UserRole.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/repository/UserRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/java/com/ecommerce/user/service/UserService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/main/resources/application.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Ecommerece-Microservices with Spring Cloud Server and Client/user/src/test/java/com/ecommerce/user/UserApplicationTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Interface" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/.." value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;rio-aman&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/rio-aman/ecommerce_microservices.git&quot;,
    &quot;accountId&quot;: &quot;6d4d75aa-4e63-476e-aecf-7a4156b20a63&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="30ok5Wg7OhlI2FS6lzHIu699OOk" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.ConfigserverApplication.executor": "Run",
    "Application.OrderApplication.executor": "Run",
    "Application.ProductApplication.executor": "Run",
    "Application.UserApplication.executor": "Run",
    "Downloaded.Files.Path.Enabled": "false",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/pc/Desktop/Ecom-Microservices/Ecommerece-Microservices with Spring Cloud Server and Client",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "reference.projectsettings.compiler.annotationProcessors"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\pc\Desktop\Ecom-Microservices\Ecommerece-Microservices with Spring Cloud Server and Client" />
      <recent name="C:\Users\pc\Desktop\Ecom-Microservices\configserver\src\main\resources\config" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="Application" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Application.ConfigserverApplication">
    <configuration name="ConfigserverApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.ecommerce.configserver.ConfigserverApplication" />
      <module name="configserver" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ecommerce.configserver.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.ecommerce.order.OrderApplication" />
      <module name="order" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ecommerce.order.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.ecommerce.product.ProductApplication" />
      <module name="product" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ecommerce.product.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.ecommerce.user.UserApplication" />
      <module name="user" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ecommerce.user.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ProductApplication" />
        <item itemvalue="Application.ConfigserverApplication" />
        <item itemvalue="Application.UserApplication" />
        <item itemvalue="Application.OrderApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="741320e4-bb3e-4b6a-bca6-6533c3224ee0" name="Changes" comment="" />
      <created>1754301132831</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1754301132831</updated>
    </task>
    <task id="LOCAL-00001" summary="updation in files">
      <option name="closed" value="true" />
      <created>1754301244683</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1754301244683</updated>
    </task>
    <task id="LOCAL-00002" summary="updation in files">
      <option name="closed" value="true" />
      <created>1754301347424</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1754301347424</updated>
    </task>
    <task id="LOCAL-00003" summary="updation in files">
      <option name="closed" value="true" />
      <created>1754370165760</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1754370165760</updated>
    </task>
    <task id="LOCAL-00004" summary="updation in files">
      <option name="closed" value="true" />
      <created>1754370708305</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1754370708305</updated>
    </task>
    <task id="LOCAL-00005" summary="done the configuration for postgresql for this spring boot Ecommerce microservices where order, product and user have different databases">
      <option name="closed" value="true" />
      <created>1754372884142</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1754372884142</updated>
    </task>
    <task id="LOCAL-00006" summary="NOW using the MongoDB database for user and postgresql for product and order &#10;And for mongodb the id type changed from Long to string and also update in user repository as extends now mongo repository and for mongo some updation in other files also">
      <option name="closed" value="true" />
      <created>1754409494016</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1754409494016</updated>
    </task>
    <task id="LOCAL-00007" summary="changed the url of databases in user move from mongodb compass to cloud database (MongoDB Atlas) and for product move from postgresql to posgtresql cloud (Neon Serverless Postgresql)">
      <option name="closed" value="true" />
      <created>1754419901138</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1754419901138</updated>
    </task>
    <task id="LOCAL-00008" summary="applied the configuration for the product to run on the postgresql locally by docker and by remote (cloud neon serverless postgresql) and after it to mysql locally and to the cloud or remote in phpmyadmin using docker and all are written in the application yml file&#10;&#10;so here now the order is connected to postgresql by docker locally and product connect to mysql by docker (on remote) and at last the user is connected to the mongodb cloud as mongodb atlas">
      <option name="closed" value="true" />
      <created>1754459170732</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1754459170732</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="updation in files" />
    <MESSAGE value="done the configuration for postgresql for this spring boot Ecommerce microservices where order, product and user have different databases" />
    <MESSAGE value="NOW using the MongoDB database for user and postgresql for product and order &#10;And for mongodb the id type changed from Long to string and also update in user repository as extends now mongo repository and for mongo some updation in other files also" />
    <MESSAGE value="changed the url of databases in user move from mongodb compass to cloud database (MongoDB Atlas) and for product move from postgresql to posgtresql cloud (Neon Serverless Postgresql)" />
    <MESSAGE value="applied the configuration for the product to run on the postgresql locally by docker and by remote (cloud neon serverless postgresql) and after it to mysql locally and to the cloud or remote in phpmyadmin using docker and all are written in the application yml file&#10;&#10;so here now the order is connected to postgresql by docker locally and product connect to mysql by docker (on remote) and at last the user is connected to the mongodb cloud as mongodb atlas" />
    <option name="LAST_COMMIT_MESSAGE" value="applied the configuration for the product to run on the postgresql locally by docker and by remote (cloud neon serverless postgresql) and after it to mysql locally and to the cloud or remote in phpmyadmin using docker and all are written in the application yml file&#10;&#10;so here now the order is connected to postgresql by docker locally and product connect to mysql by docker (on remote) and at last the user is connected to the mongodb cloud as mongodb atlas" />
  </component>
</project>