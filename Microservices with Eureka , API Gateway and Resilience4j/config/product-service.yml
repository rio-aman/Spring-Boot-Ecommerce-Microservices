spring:
  datasource:
    url: ${POSTGRESQL_URL}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
  # ABOVE WHEN USING THE DOCKER INSTANCE RABBITMQ

  #NOW USING THE CLOUDAMQP RABBITMQ CLOUD
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:guest}
    connection-timeout: 30000
    ssl:
      enabled: true
  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0


app:
  message: "Hello Message Shown Successfully"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 3MB
      max-history: 5